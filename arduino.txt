#include <WiFi.h>
#include <PubSubClient.h>
#include <DHT.h>

#define DHTPIN 32
#define GAS_SENSOR_PIN 33
#define HUMEDAD_SUELO_PIN 34
#define DHTTYPE DHT11

// üöÄ Configuraci√≥n WiFi
const char* ssid = "Gatitos.com";      // Cambia esto por tu red WiFi
const char* password = "Camisa.123"; // Cambia esto por tu clave WiFi

// üöÄ Configuraci√≥n del broker EMQX
const char* mqtt_server = "broker.emqx.io";  // Servidor MQTT EMQX
const int mqtt_port = 1883;                  // Puerto MQTT sin SSL
const char* mqtt_topic = "sensor/datos";   // T√≥pico donde se enviar√°n los datos

// Objetos WiFi y MQTT
WiFiClient espClient;
PubSubClient client(espClient);
DHT dht(DHTPIN, DHTTYPE);

void setup() {
    Serial.begin(115200);
    dht.begin();
    
    conectarWiFi();
    
    client.setServer(mqtt_server, mqtt_port);
    conectarMQTT();
}

void loop() {
    if (!client.connected()) {
        conectarMQTT();
    }
    client.loop();

    float humidity = dht.readHumidity();
    float temperature = dht.readTemperature();
    int gasValue = analogRead(GAS_SENSOR_PIN);
    int humedadSuelo = analogRead(HUMEDAD_SUELO_PIN);

    if (!isnan(humidity) && !isnan(temperature)) {
        // Crear JSON con los datos del sensor
        String payload = "{\"temperatura\":";
        payload += temperature;
        payload += ",\"humedad\":";
        payload += humidity;
        payload += ",\"gas\":";
        payload += gasValue;
        payload += ",\"humedadSuelo\":";
        payload += humedadSuelo;
        payload += "}";

        Serial.println("üì° Enviando MQTT: " + payload);

        // Publicar en el broker MQTT
        client.publish(mqtt_topic, payload.c_str());
    }

    delay(5000); // Esperar 30q  segundos antes de la siguiente lectura
}

// Conectar a WiFi
void conectarWiFi() {
    Serial.print("üîå Conectando a WiFi...");
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.print(".");
    }
    Serial.println("\n‚úÖ Conectado a WiFi!");
}

// Conectar a MQTT
void conectarMQTT() {
    while (!client.connected()) {
        Serial.print("üîó Conectando a EMQX...");
        if (client.connect("ESP32_Client")) { // Puedes cambiar "ESP32_Client" por un ID √∫nico
            Serial.println("‚úÖ Conectado a EMQX!");
        } else {
            Serial.print("‚ö†Ô∏è Error: ");
            Serial.print(client.state());
            Serial.println(" Reintentando en 5 segundos...");
            delay(5000);
        }
    }
}
